(define (apa-add-reverse n)
  (define (rem-digits digs)
    (if (null? digs) '() (cdr digs)))
  (define (apa-add-helper p1 p2 carry)
    (if (and (null? p1) (null? p2) (= 0 carry))
        '()
  (let* ((d1 (if (null? p1) 0 (car p1)))
         (d2 (if (null? p2) 0 (car p2)))
         (total (+ carry d1 d2)))
    (cons (modulo total 10) (apa-add-helper (rem-digits p1) (rem-digits p2) (quotient total 10))))))
  (apa-add-helper n (list 1) 0))
(define (apa-add n)
  (reverse (apa-add-reverse (reverse n))))
(apa-add (list 79))